#!/bin/bash

# Dumb script to setup 3 git repos with which gitconnector can be tested. 1
# 'remote', 2 'locals' Dumb because it is very static, all paths are hard coded.

# export PATH=~/bin/gitconnector:"$PATH"

mkdir -p ~/bin/gitconnector/test/
cd ~/bin/gitconnector/test/

# create initial repo. It is most probably not really needed, I just didnt found
# another way to start with a bare remote repo - because then all repos are
# empty, I cant create a nice branch into which I could checkin my first signed
# off commit
mkdir initial
cd initial
git init
echo hello world >> main.cpp
git add main.cpp
git commit -a -m $'initial\nSigned-off-by: git-dragon'

# create bare remote repo, cloning from initial
cd ~/bin/gitconnector/test
git clone --bare initial remote
ln ~/bin/gitconnector/update remote/hooks/update

# remove intial repo 
rm -rf ~/bin/gitconnector/initial 

# create local repos bob & sally, cloning from remote
cd ~/bin/gitconnector/test/
git clone remote bob
ln ~/bin/gitconnector/pre-commit bob/.git/hooks/pre-commit
ln ~/bin/gitconnector/prepare-commit-msg bob/.git/hooks/prepare-commit-msg
ln ~/bin/gitconnector/commit-msg bob/.git/hooks/commit-msg
git clone remote sally
ln ~/bin/gitconnector/pre-commit sally/.git/hooks/pre-commit
ln ~/bin/gitconnector/prepare-commit-msg sally/.git/hooks/prepare-commit-msg
ln ~/bin/gitconnector/commit-msg sally/.git/hooks/commit-msg

# create the required master-nice branch in the local repos
# cd ~/bin/gitconnector/test/bob
# git branch --track master-nice origin/master
# cd ~/bin/gitconnector/test/sally
# git branch --track master-nice origin/master

